package ru.firesin.weather.model;

import lombok.Data;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

/**
 * Author:    firesin
 * Date:      28.10.2023
 */

@Data
public class WeatherNow {
    private List<Weather> weather;
    private Main main;
    private Wind wind;
    private Sys sys;
    private String name;

    private String formatTime(long timestamp) {
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
        return sdf.format(new Date(timestamp * 1000));
    }

    @Override
    public String toString() {
        return "–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ " + name +
                "\n\n–û–±–ª–∞—á–Ω–æ—Å—Ç—å: " + weather.get(0).getDescription() +
                "\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + main.getTemp() + "¬∞C " + getTemperatureEmoji(main.getTemp()) +
                "\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: " + main.getFeelsLike() + "¬∞C" +
                "\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: " + wind.getSpeed() + "–º/—Å üå¨Ô∏è" +
                "\n–î–∞–≤–ª–µ–Ω–∏–µ: " + main.getPressure() + "–º–º —Ä—Ç.—Å—Ç." +
                "\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: " + main.getHumidity() + "%" +
                "\nüåÖ –í–æ—Å—Ö–æ–¥: " + formatTime(sys.getSunrise()) +
                "\nüåá –ó–∞–∫–∞—Ç: " + formatTime(sys.getSunset());
    }

    private String getTemperatureEmoji(double temperature) {
        if (temperature < -10) {
            return "‚ùÑÔ∏è";
        } else if (temperature < 0) {
            return "ü•∂";
        } else if (temperature < 10) {
            return "üò¨";
        } else if (temperature < 20) {
            return "üòä";
        } else {
            return "‚òÄÔ∏è";
        }
    }
}
